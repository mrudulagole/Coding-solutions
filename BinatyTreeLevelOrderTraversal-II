/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
         List<List<Integer>> result = new ArrayList<List<Integer>>(); 
        if(root==null)
            return result;
       
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        
        queue.add(root);
        queue.add(null);
       
        while(!queue.isEmpty()){
            List<Integer> level = new ArrayList<Integer>();
            while(queue.peek()!=null){
                TreeNode current=queue.poll();
                level.add(current.val);
                if(current.left!=null)
                    queue.add(current.left);
                if(current.right!=null)
                    queue.add(current.right);
            }
            result.add(0,level);
            queue.remove();
            if(!queue.isEmpty())
                queue.add(null);
        }
        return result;
    }
}

class Solution {
    public int[][] allCellsDistOrder(int R, int C, int r0, int c0) {
        int[][] res = new int[R*C][2];
        int i = 0;
        PriorityQueue<int[]> q = new PriorityQueue<>(new Comparator<int[]>(){
            @Override
            public int compare(int[] a, int[] b){
                int s = (Math.abs(a[0]-r0) + Math.abs(a[1]-c0)) - (Math.abs(b[0]-r0) + Math.abs(b[1]-c0));
                if(s<0) return -1;
                else if(s==0) return 0;
                else return 1;
            }
        });    
        for(int r=0; r<R; r++ ){
            for(int c=0; c<C; c++){
                int dist = Math.abs(r-r0)+Math.abs(c-c0);
                q.add(new int[]{r,c});
            }
        }
        while(!q.isEmpty()){
            int[] v = q.poll();
            res[i][0] = v[0];
            res[i][1] = v[1];
            i++;   
        }
        return res;
    }
}
